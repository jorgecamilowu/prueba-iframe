{"version":3,"sources":["Inicio.js","Test.js","Main.js","statusReducer.js","App.js","reportWebVitals.js","index.js"],"names":["Inicio","state","useContext","StatusContext","React","useState","open","setOpen","useEffect","window","addEventListener","event","console","log","origin","data","className","onClick","alert","status","Collapse","in","title","src","url","Test","dispatch","StatusDispatchContext","type","payload","parent","postMessage","Main","input","setInput","history","useHistory","Grid","container","justify","item","xs","TextField","defaultValue","onChange","e","target","value","Button","push","initialState","statusReducer","createContext","App","useReducer","Provider","component","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kQA8BeA,EAzBA,WAEb,IAAMC,EAAQC,qBAAWC,GAFN,EAGKC,IAAMC,UAAS,GAHpB,mBAGZC,EAHY,KAGNC,EAHM,KAcnB,OATAC,qBAAU,WACRC,OAAOC,iBAAiB,WAAW,SAACC,GAClCC,QAAQC,IAAIF,GACS,0BAAjBA,EAAMG,QAAqD,UAAfH,EAAMI,MACpDR,GAAQ,QAGX,IAGD,sBAAKS,UAAU,MAAf,UACE,wBAAQC,QAAS,kBAAMC,MAAMjB,EAAMkB,SAAnC,wBACA,oDACA,cAACC,EAAA,EAAD,CAAUC,GAAIf,EAAd,SACE,wBAAQgB,MAAM,cAAcC,IAAKtB,EAAMuB,IAAKR,UAAU,gBCX/CS,EATF,WACX,IAAMC,EAAWxB,qBAAWyB,GAK5B,OAJAnB,qBAAU,WACRkB,EAAS,CAAEE,KAAM,eAAgBC,QAAS,YAC1CpB,OAAOqB,OAAOC,YAAY,QAAS,2BAClC,IACI,yB,2BC0BMC,EAzBF,WAAO,IAAD,EACS3B,mBAAS,IADlB,mBACV4B,EADU,KACHC,EADG,KAEXC,EAAUC,cACVV,EAAWxB,qBAAWyB,GAO5B,OACE,eAACU,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAAxB,UACE,cAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACE,cAACC,EAAA,EAAD,CACEC,aAAcV,EACdW,SAAU,SAACC,GAAD,OAAOX,EAASW,EAAEC,OAAOC,YAGvC,cAACV,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACE,cAACO,EAAA,EAAD,CAAQ/B,QAdd,SAAsB4B,GACpBnB,EAAS,CAAEE,KAAM,MAAOC,QAASI,IACjCE,EAAQc,KAAK,YAYT,wB,QC9BKC,EAAe,CAC1B/B,OAAQ,aACRK,IAAK,IAGQ,SAAS2B,EAAclD,EAAvB,GAAkD,IAAlB2B,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,QACnD,OAAQD,GACN,IAAK,eACH,OAAO,2BACF3B,GADL,IAEEkB,OAAQU,IAGZ,IAAK,MACH,OAAO,2BACF5B,GADL,IAEEuB,IAAKK,IAGT,QACE,OAAO5B,GCbN,IAAME,EAAgBiD,0BAChBzB,EAAwByB,0BAgBtBC,MAff,WAAgB,IAAD,EACaC,qBAAWH,EAAeD,GADvC,mBACNjD,EADM,KACCyB,EADD,KAEb,OACE,cAACC,EAAsB4B,SAAvB,CAAgCR,MAAOrB,EAAvC,SACE,cAACvB,EAAcoD,SAAf,CAAwBR,MAAO9C,EAA/B,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOuD,UAAWxB,EAAMyB,KAAK,MAC7B,cAAC,IAAD,CAAOD,UAAWxD,EAAQyD,KAAK,UAAUC,OAAK,IAC9C,cAAC,IAAD,CAAOF,UAAW/B,EAAMgC,KAAK,QAAQC,OAAK,YCLrCC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.37392ac6.chunk.js","sourcesContent":["import React, { useContext, useEffect } from \"react\";\r\nimport { Collapse } from \"@material-ui/core\";\r\nimport { StatusContext } from \"./App\";\r\nimport \"./inicio.css\";\r\n\r\nconst Inicio = () => {\r\n  // const link = `https://ecomdevfe.telered.com.pa:7433/?commerce_id=680000246&description=Compra%20eCommerce&membership_req_id=8527&session_id=74d50e1f-b92c-48f6-b01c-70ee0ea6e07f&actions=3&currency=USD&amount=110&pin_validation_req_id=9731&correlation_id=2351ad09-1ada-425b-8fbb-5258427f1dc0&return_url=https%3A%2F%2Fwww.google.com%3Fsession_id%3D74d50e1f-b92c-48f6-b01c-70ee0ea6e07f`;\r\n  const state = useContext(StatusContext);\r\n  const [open, setOpen] = React.useState(true);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"message\", (event) => {\r\n      console.log(event);\r\n      if (event.origin === \"http://localhost:3000\" && event.data === \"close\") {\r\n        setOpen(false);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <button onClick={() => alert(state.status)}>Get Status</button>\r\n      <h1>IFrame Client Demo</h1>\r\n      <Collapse in={open}>\r\n        <iframe title=\"Iframe Test\" src={state.url} className=\"frame\" />\r\n      </Collapse>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Inicio;\r\n","import React from \"react\";\r\nimport { useContext, useEffect } from \"react\";\r\nimport { StatusDispatchContext } from \"./App\";\r\n\r\nconst Test = () => {\r\n  const dispatch = useContext(StatusDispatchContext);\r\n  useEffect(() => {\r\n    dispatch({ type: \"notification\", payload: \"success\" });\r\n    window.parent.postMessage(\"close\", \"http://localhost:3000\");\r\n  }, []);\r\n  return <div />;\r\n};\r\n\r\nexport default Test;\r\n","import React, { useState, useContext } from \"react\";\r\nimport {\r\n  TextField,\r\n  Button,\r\n  Grid,\r\n  createStyles,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { StatusDispatchContext } from \"./App\";\r\n\r\nconst Main = () => {\r\n  const [input, setInput] = useState(\"\");\r\n  const history = useHistory();\r\n  const dispatch = useContext(StatusDispatchContext);\r\n\r\n  function handleOnNext(e) {\r\n    dispatch({ type: \"url\", payload: input });\r\n    history.push(\"/inicio\");\r\n  }\r\n\r\n  return (\r\n    <Grid container justify=\"center\">\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          defaultValue={input}\r\n          onChange={(e) => setInput(e.target.value)}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Button onClick={handleOnNext}>Next</Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","export const initialState = {\r\n  status: \"processing\",\r\n  url: \"\",\r\n};\r\n\r\nexport default function statusReducer(state, { type, payload }) {\r\n  switch (type) {\r\n    case \"notification\": {\r\n      return {\r\n        ...state,\r\n        status: payload,\r\n      };\r\n    }\r\n    case \"url\": {\r\n      return {\r\n        ...state,\r\n        url: payload,\r\n      };\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n}\r\n","import React, { useReducer, createContext } from \"react\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport Inicio from \"./Inicio\";\nimport Test from \"./Test\";\nimport Main from \"./Main\";\nimport statusReducer, { initialState } from \"./statusReducer\";\n\nexport const StatusContext = createContext();\nexport const StatusDispatchContext = createContext();\nfunction App() {\n  const [state, dispatch] = useReducer(statusReducer, initialState);\n  return (\n    <StatusDispatchContext.Provider value={dispatch}>\n      <StatusContext.Provider value={state}>\n        <BrowserRouter>\n          <Route component={Main} path=\"/\" />\n          <Route component={Inicio} path=\"/inicio\" exact />\n          <Route component={Test} path=\"/test\" exact />\n        </BrowserRouter>\n      </StatusContext.Provider>\n    </StatusDispatchContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}